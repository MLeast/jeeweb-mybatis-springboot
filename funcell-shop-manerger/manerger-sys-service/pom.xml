<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.funcell</groupId>
	<artifactId>manerger-sys-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>manerger-sys-service</name>
	<description>Demo project for Spring Boot</description>

	<!--<parent>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-parent</artifactId>-->
		<!--<version>2.1.0.RELEASE</version>-->
		<!--<relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
	<!--</parent>-->

	<parent>
		<groupId>com.funcell</groupId>
		<artifactId>springboot-shop-manerger</artifactId>
		<version>0.0.1.RELEASE</version>
		<!--<relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<bitwalker.version>1.19</bitwalker.version>
		<swagger.version>2.7.0</swagger.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-starter-test</artifactId>-->
			<!--<scope>test</scope>-->
		<!--</dependency>-->

		<dependency>
			<groupId>com.funcell</groupId>
			<artifactId>manerger-sys-common-utils</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.funcell</groupId>
			<artifactId>manerger-sys-common-mybatis</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.funcell</groupId>
			<artifactId>manerger-sys-common-oss</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.funcell</groupId>
			<artifactId>manerger-sys-ui-static</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.funcell</groupId>
			<artifactId>manerger-sys-ui-tag</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.funcell</groupId>
			<artifactId>manerger-sys-common-email</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!--poi Excel开始-->
		<dependency>
			<groupId>cn.afterturn</groupId>
			<artifactId>easypoi-base</artifactId>
			<version>3.2.0</version>
		</dependency>
		<dependency>
			<groupId>cn.afterturn</groupId>
			<artifactId>easypoi-web</artifactId>
			<version>3.2.0</version>
		</dependency>
		<dependency>
			<groupId>cn.afterturn</groupId>
			<artifactId>easypoi-annotation</artifactId>
			<version>3.2.0</version>
		</dependency>
		<!--poi Excel结束-->
		<!-- 解析客户端操作系统、浏览器等 -->
		<dependency>
			<groupId>eu.bitwalker</groupId>
			<artifactId>UserAgentUtils</artifactId>
			<version>${bitwalker.version}</version>
		</dependency>
		<!--整合swagger-->
		<dependency>
			<groupId>com.spring4all</groupId>
			<artifactId>swagger-spring-boot-starter</artifactId>
			<version>1.7.0.RELEASE</version>
		</dependency>

		<!--打包 start https://blog.csdn.net/u012811805/article/details/80878848  https://blog.csdn.net/qq_35959573/article/details/81001099 Spring Boot 打包分离依赖 JAR 和配置文件-->
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<version>2.4.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jar-plugin</artifactId>
			<version>3.1.0</version>
		</dependency>
		<!--数据源切换-->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>dynamic-datasource-spring-boot-starter</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>1.1.10</version>
		</dependency>

		<!--SpringBoot使用yaml作为配置文件之坑 不配置当前依赖，会出现ClassNotFoundException: org.springframework.boot.SpringApplication-->
		<!--<dependency>-->
			<!--<groupId>org.yaml</groupId>-->
			<!--<artifactId>snakeyaml</artifactId>-->
			<!--<version>1.21</version>-->
		<!--</dependency>-->
		<!--打包 end-->

	</dependencies>


	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!--<plugin>-->
				<!--<groupId>org.springframework.boot</groupId>-->
				<!--<artifactId>spring-boot-maven-plugin</artifactId>-->
				<!--<configuration>-->
					<!--<fork>true</fork>-->
					<!--<executable>true</executable>-->
					<!--<jvmArguments>-Dfile.encoding=UTF-8</jvmArguments>-->
				<!--</configuration>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<goals>-->
							<!--<goal>repackage</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
			<!-- 编码和编译和JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- 打JAR包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<includes>
						<include>com/funcell/**</include>
					</includes>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<!-- MANIFEST.MF 中 Class-Path 加入前缀 -->
							<classpathPrefix>lib/</classpathPrefix>
							<!--指定入口类 -->
							<mainClass>com.funcell.ManergerSysServiceApplication</mainClass>
						</manifest>
						<manifestEntries>
							<!--MANIFEST.MF 中 Class-Path 加入资源文件目录 -->
							<Class-Path>resources/</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- 该插件的作用是用于复制依赖的jar包到指定的文件夹里 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 该插件的作用是用于复制指定的文件 -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution> <!-- 复制配置文件 -->
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<!--<includes>-->
										 <!--<include>**/*</include>-->
									<!--</includes>-->
									<excludes>
										<exclude>**/application.yml</exclude>
									</excludes>
								</resource>
							</resources>
							<outputDirectory>${project.build.directory}/resources</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--打包插件 指定配置文件进行-->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--打包插件-->
			<!--<plugin>-->
				<!--<artifactId>maven-assembly-plugin</artifactId>-->
				<!--<configuration>-->
					<!--<descriptors>-->
						<!--<descriptor>src/main/assembly/assembly.xml</descriptor>-->
					<!--</descriptors>-->
				<!--</configuration>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>make-assembly</id>-->
						<!--<phase>package</phase>-->
						<!--<goals>-->
							<!--<goal>single</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
			<!--不推送到仓库-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
